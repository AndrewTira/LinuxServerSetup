apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: bitwarden
  namespace: argocd
spec:
  project: default
  destination:
    namespace: bitwarden
    name: in-cluster
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
  source:
    repoURL: https://charts.bitwarden.com/
    chart: self-host
    targetRevision: "2025.4.2"
    helm:
      values: |
        global:
          domain: bitwarden.k3s.home
          # IMPORTANT: Also set the full URL if your Bitwarden chart requires it for CORS
          # url: https://bitwarden.k3s.home

        controller:
          service:
            type: ClusterIP

        ingress:
          enabled: true
          className: nginx
          annotations:
            nginx.ingress.kubernetes.io/ssl-redirect: "true"
            nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          hosts:
            - host: bitwarden.k3s.home
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - hosts:
                - bitwarden.k3s.home
              secretName: bitwarden-tls

        # --- ADD THIS SECTION FOR POSTGRESQL CONNECTION ---
        # Refer to the Bitwarden Helm chart's values.yaml for the exact structure.
        # This is a common pattern for Bitnami/similar charts.
        database:
          type: postgresql # Explicitly set database type to postgresql
          host: postgresql.bitwarden.svc.cluster.local # <-- Use your PostgreSQL Service FQDN
          port: 5432 # Your PostgreSQL port
          name: bitwarden # The database name you want Bitwarden to use/create
          user: bitwarden
          password: supersecure
          # Reference the secret created above for the password
          existingSecret: bitwarden-postgresql-secret
          existingSecretKey: postgresql-password
          # Optional: SSL mode, depending on your PostgreSQL setup (e.g., if connecting over a public network)
          # sslMode: verify-full # Or 'require', 'prefer', 'disable'
          # For in-cluster communication, 'disable' or 'prefer' is often used,
          # but 'verify-full' is more secure if you have TLS configured.