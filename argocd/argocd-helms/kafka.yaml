apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kafka
  namespace: argocd
spec:
  project: default
  destination:
    namespace: kafka  #update namespace name if you wish
    name: in-cluster   #update cluster name if its different
#  syncPolicy:
#    automated:
#      prune: true
#      selfHeal: true
#    syncOptions:
#      - CreateNamespace=true
  source:
    repoURL: registry-1.docker.io
    chart: bitnamicharts/kafka
    targetRevision: "32.2.8"
    helm:
      values: |
        # --- Kafka Helm Chart Values ---
        # Customize these values based on the chart documentation:
        # https://github.com/bitnami/charts/tree/main/bitnami/kafka

        # Example: Configure Kafka persistence (CRITICAL FOR DATA SAFETY)
        persistence:
          enabled: true
          size: 10Gi # Adjust size based on your data volume
          # storageClass: your-storage-class-name # Specify your storage class

        # Example: Configure Zookeeper persistence (CRITICAL FOR DATA SAFETY)
        # Zookeeper is often deployed as a dependency by this chart
        auth:
          clientProtocol: plaintext # Or ssl
          # passwords:
          #   clientPassword: your-kafka-client-password # Use Secrets!
          #   metricsPassword: your-kafka-metrics-password
          #   jmxPassword: your-kafka-jmx-password

        # Example: Configure Kafka replicas (for high availability)
        # replicaCount: 3

        # Example: Configure Zookeeper replicas (for high availability)
        # zookeeper:
        #   replicaCount: 3
        #   persistence:
        #     enabled: true
        #     size: 10Gi
        #     # storageClass: your-storage-class-name

        # Example: Configure external access (e.g., via NodePort or LoadBalancer)
        # service:
        #   type: ClusterIP
        #   nodePorts:
        #     client: ""
        #     external: ""
        #   externalTrafficPolicy: Cluster
        #   external:
        #     type: LoadBalancer # Or NodePort
        #     ports:
        #       - name: external
        #         port: 9094
        #         nodePort: 30094 # If using NodePort

        # Example: Resource requests and limits
        # resources:
        #   requests:
        #     cpu: 500m
        #     memory: 512Mi
        #   limits:
        #     cpu: 1000m
        #     memory: 1Gi